@model DeveloperAssessment.Web.ViewModels.Blog.BlogPostViewModel

<div class="container py-5">
    <div class="row">

        <!-- Blog post content -->
        <div class="col-lg-12">

            <!-- Title -->
            <h1 class="mt-4 text-center">@Model.Title</h1>

            <hr>

            <!-- Date/Time -->
            <p class="text-muted">Posted on @Model.Date.ToLongDateString()</p>

            <hr>

            <!-- Preview Image -->
            <img class="img-fluid rounded mb-4" src="@Model.Image" alt="Top 5 Considerations for a Content-First Design Approach">

            <hr>

            <!-- Post Content -->
            <div class="post-content">
                @Html.Raw(Model.HtmlContent)
            </div>

            <hr>

            <div id="blog-js">
                <!-- Blog post comment form -->
                <div class="card my-4 shadow-sm">
                    <h5 class="card-header bg-secondary text-white">Leave a Comment:</h5>
                    <div class="card-body">
                        <form v-on:submit.prevent="submitComment" enctype="multipart/form-data">
                            <div class="form-row">
                                <div class="form-group col-md-6 py-1">
                                    <label for="Name">Name</label>
                                    <input v-model="formData.name" type="text" class="form-control" id="Name" placeholder="Name" required>
                                </div>
                                <div class="form-group col-md-6 py-1">
                                    <label for="EmailAddress">Email Address</label>
                                    <input v-model="formData.email" type="email" class="form-control" id="EmailAddress" name="email" placeholder="Email Address" required>
                                </div>
                            </div>

                            <div class="form-group py-1">
                                <label for="Message">Message</label>
                                <textarea v-model="formData.message" id="Message" name="message" class="form-control" rows="3" required></textarea>
                            </div>

                            <div class="form-group py-1">
                                <label for="fileUpload">Upload Image (Optional)</label>
                                <input v-on:change="handleFileChange($event)" type="file" class="form-control" id="fileUpload">
                            </div>

                            <div class="py-2">
                                <button type="submit" class="btn btn-primary btn-block">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Blog post comments -->
                <div class="media mb-4" v-for="comment in blogViewModel.comments" v-cloak>
                    <div class="media-body p-2">
                        <div class="d-flex align-items-center py-2">
                            <img class="me-2 rounded-circle user-avatar" :src="toAvatarUrl(comment.name)" :alt="comment.name" width="50" height="50">
                            <div class="d-flex flex-column">
                                <h5 class="mb-0">
                                    {{comment.name}}
                                </h5>
                                <em class="text-muted">{{comment.formattedDate}}</em>
                            </div>
                        </div>
                        <p>{{comment.message}}</p>

                        <div v-if="comment.downloadUrl">
                            <a :href="comment.downloadUrl"
                               target="_blank"
                               class="link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">
                                Download Attachment -> {{comment.downloadName}}
                            </a>
                        </div>

                        <div class="col-lg-4 p-3" v-show="comment?.replies?.length > 0">
                            <div class="rounded border border-black p-2">
                                <h5>Replies</h5>
                                <div v-for="reply in comment.replies" class="mt-2">
                                    <small>
                                        <em>{{reply}}</em>
                                        <hr class="my-0">
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="media-body p-2">
                        <button v-on:click="setupReply(comment.id)"
                                class="btn btn-secondary py-2"
                                type="button">
                            Reply To Comment
                        </button>
                        <div class="collapse py-3 col-md-4" :id="'collapse-' + comment.id">
                            <textarea v-model="reply.message" class="form-control col-4 col-md-2 " rows="1"></textarea>
                            <div class="py-2">
                                <button v-on:click="sendReply(comment.id)" class="btn btn-danger btn-sm">Reply</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Toast Notification -->
                <div id="toast-container" class="position-fixed bottom-0 end-0 p-3 rounded-1" style="z-index: 1050;">
                    <div id="form-toast" class="toast text-black bg-secondary bg-opacity-75" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header">
                            <div class="me-auto text-black">{{toastHeader}}</div>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body">
                            {{toastMessage}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var blogViewModel = @Html.Raw(Json.Serialize(Model));
    </script>
    <script src="~/js/blog-component.js"></script>
}